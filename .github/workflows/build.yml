name: Keyball manual build (QMK/Vial)

on:
  workflow_dispatch:
    inputs:
      kb:
        description: "Keyboard (例: keyball/keyball44, keyball/keyball39)"
        required: true
        type: choice
        default: "keyball/keyball44"
        options:
          - "keyball/keyball39"
          - "keyball/keyball44"
          - "keyball/keyball61"
      km:
        description: "Keymap (keyball/keyballXX/keymaps/ 配下の名称)"
        required: true
        type: choice
        default: "user_dual"
        options:
          - "user_dual"
          - "user_left"
          - "user_right"
          - "toxaO"
      impl:
        description: "Build implementation (qmk or vial)"
        required: true
        default: "qmk"
        type: choice
        options: ["qmk", "vial"]
      qmk_tag:
        description: "QMK firmware tag (例: 0.30.3 / v0.30.3)"
        required: false
        default: "0.30.3"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ inputs.kb }}-${{ inputs.km }}
  cancel-in-progress: true

jobs:
  build:
    name: Build ${{ inputs.impl }} • ${{ inputs.kb }}:${{ inputs.km }}
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Checkout QMK to tag (only for impl=qmk)
        if: inputs.impl == 'qmk'
        run: |
          set -euo pipefail
          TAG="${{ inputs.qmk_tag }}"
          cd qmk_firmware
          git fetch --tags origin || true
          if ! git rev-parse -q --verify "refs/tags/$TAG" >/dev/null; then
            if ! git remote get-url upstream >/dev/null 2>&1; then
              git remote add upstream https://github.com/qmk/qmk_firmware.git
            fi
            git fetch --tags upstream || true
          fi
          ALT_TAG="v$TAG"
          if ! git rev-parse -q --verify "refs/tags/$TAG" >/dev/null && git rev-parse -q --verify "refs/tags/$ALT_TAG" >/dev/null; then
            TAG="$ALT_TAG"
          fi
          echo "Use QMK tag: $TAG"
          git checkout -f "$TAG"
          git submodule sync --recursive || true
          git submodule update --init --recursive --depth 1 || true

      - name: Install toolchain
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-arm-none-eabi binutils-arm-none-eabi

      - name: Setup qmk (venv)
        run: |
          python -m venv .venv
          . .venv/bin/activate
          python -m pip install -U pip qmk
          # QMK側をHOMEに設定（vialでもqmkコマンドの準備は共通）
          qmk setup -H "$GITHUB_WORKSPACE/qmk_firmware" -y || true

      - name: Link keyboards/keyball → ../../keyball (qmk & vial trees)
        run: |
          rm -rf qmk_firmware/keyboards/keyball
          mkdir -p qmk_firmware/keyboards
          ln -s ../../keyball qmk_firmware/keyboards/keyball
          ls -l qmk_firmware/keyboards
          rm -rf vial-qmk/keyboards/keyball || true
          mkdir -p vial-qmk/keyboards
          ln -s ../../keyball vial-qmk/keyboards/keyball
          ls -l vial-qmk/keyboards

      # impl=qmk: qmk_firmware を作業ディレクトリにしてビルド（.build の場所を安定化）
      - name: Build (impl=qmk)
        if: inputs.impl == 'qmk'
        working-directory: qmk_firmware
        run: |
          . ../.venv/bin/activate
          qmk clean -q -n -y || true
          qmk compile -kb "${{ inputs.kb }}" -km "${{ inputs.km }}"

      # impl=vial: Vial用QMKでビルド。SKIP_GIT=yesはネットワーク不要化、VIAL_ENABLE=yesでVial機能を有効化
      - name: Build (impl=vial)
        if: inputs.impl == 'vial'
        run: |
          . .venv/bin/activate
          make -C vial-qmk SKIP_GIT=yes VIAL_ENABLE=yes "${{ inputs.kb }}:${{ inputs.km }}"

      # 成果物の場所を可視化（デバッグ用）
      - name: Show build outputs
        if: always()
        run: |
          echo "::group::tree .build (repo root)"
          (ls -al .build && find .build -maxdepth 3 -type f) || true
          echo "::endgroup::"
          echo "::group::tree qmk_firmware/.build"
          (ls -al qmk_firmware/.build && find qmk_firmware/.build -maxdepth 3 -type f) || true
          echo "::endgroup::"
          echo "::group::tree vial-qmk/.build"
          (ls -al vial-qmk/.build && find vial-qmk/.build -maxdepth 3 -type f) || true
          echo "::endgroup::"
          echo "::group::hunt uf2/hex/bin"
          find . -maxdepth 3 \( -name "*.uf2" -o -name "*.hex" -o -name "*.bin" \) -print || true
          echo "::endgroup::"

      # Artifact 名を bash でサニタイズ（/ : 空白 など → _）
      - name: Compute artifact name
        id: meta
        shell: bash
        run: |
          SAFE_KB="${{ inputs.kb }}"
          SAFE_KB="${SAFE_KB//\//_}"
          SAFE_KB="${SAFE_KB//:/_}"
          SAFE_KB="${SAFE_KB// /_}"
          SAFE_NAME="${{ inputs.impl }}-${SAFE_KB}-${{ inputs.km }}"
          echo "ARTIFACT_NAME=$SAFE_NAME" >> "$GITHUB_ENV"
          echo "artifact=$SAFE_NAME" >> "$GITHUB_OUTPUT"
          echo "Artifact name: $SAFE_NAME"

      - name: Upload firmware
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.meta.outputs.artifact }}
          path: |
            .build/**/*.uf2
            .build/**/*.hex
            .build/**/*.bin
            qmk_firmware/.build/**/*.uf2
            qmk_firmware/.build/**/*.hex
            qmk_firmware/.build/**/*.bin
            qmk_firmware/*.uf2
            qmk_firmware/*.hex
            qmk_firmware/*.bin
            vial-qmk/.build/**/*.uf2
            vial-qmk/.build/**/*.hex
            vial-qmk/.build/**/*.bin
          if-no-files-found: error
          retention-days: 14
